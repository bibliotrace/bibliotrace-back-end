name: Deploy

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
  runs-on: ubuntu-latest
  needs: build

  steps:
    - name: Download distribution artifact
      uses: actions/download-artifact@v4
      with:
        name: package

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Create OIDC token to AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        audience: sts.amazonaws.com
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up machine emulation
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker build
      uses: docker/setup-buildx-action@v3

    - name: Build and push container image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "bibliotrace"
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_TARGET_NAME: ${{ secrets.DB_TARGET_NAME }}
      run: |
        aws ecr describe-repositories --repository-names bibliotrace --region us-east-1 || \
        aws ecr create-repository --repository-name bibliotrace --region us-east-1
        docker build --platform=linux/amd64 \
        --build-arg DB_USER=$DB_USER \
        --build-arg DB_PASSWORD=$DB_PASSWORD \
        --build-arg DB_HOST=$DB_HOST \
        --build-arg DB_TARGET_NAME=$DB_TARGET_NAME \
        -t $ECR_REGISTRY/$ECR_REPOSITORY --push .
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >>  $GITHUB_OUTPUT

    - name: Deploy new container
      run: |
        aws ecs update-service --cluster bibliotrace-service --service bibliotrace-service --force-new-deployment
        aws ecs wait services-stable --cluster bibliotrace-service --services bibliotrace-service
        echo "Container deployed successfully"
